# Generated by Django 5.1.3 on 2024-11-18 05:37

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=25)),
                ('lastname', models.CharField(max_length=25)),
                ('mail', models.CharField(max_length=100)),
                ('status', models.BooleanField(default=False)),
                ('date_of_birth', models.DateField()),
                ('country', models.CharField(max_length=50)),
                ('pincode', models.CharField(max_length=127)),
                ('city', models.CharField(max_length=28)),
                ('phone', models.CharField(max_length=15)),
                ('languages', models.JSONField(default=dict)),
            ],
            options={
                'db_table': 'user_details',
            },
        ),
        migrations.CreateModel(
            name='ResumeDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('professional_summary', models.TextField()),
                ('additional_details', models.JSONField(default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Resume.userdetails')),
            ],
            options={
                'db_table': 'resume_details',
            },
        ),
        migrations.CreateModel(
            name='ProjectDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=100)),
                ('startdate', models.DateField()),
                ('enddate', models.DateField(blank=True, null=True)),
                ('project_summary', models.TextField()),
                ('certification', models.JSONField(default=dict)),
                ('resume_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Resume.resumedetails')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Resume.userdetails')),
            ],
            options={
                'db_table': 'project_details',
            },
        ),
        migrations.CreateModel(
            name='ExperienceDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=100)),
                ('employer', models.CharField(max_length=100)),
                ('currently_working', models.BooleanField(default=False)),
                ('startdate', models.DateField()),
                ('enddate', models.DateField(blank=True, null=True)),
                ('city', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=50)),
                ('summary', models.TextField()),
                ('resume_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Resume.resumedetails')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Resume.userdetails')),
            ],
            options={
                'db_table': 'experience_details',
            },
        ),
        migrations.CreateModel(
            name='EducationalDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institute_name', models.CharField(max_length=150)),
                ('location', models.CharField(max_length=100)),
                ('field_of_study', models.CharField(max_length=100)),
                ('qualification', models.CharField(max_length=50)),
                ('graduation_year', models.CharField(max_length=4)),
                ('resume_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Resume.resumedetails')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Resume.userdetails')),
            ],
            options={
                'db_table': 'educational_details',
            },
        ),
        migrations.CreateModel(
            name='UserResumes',
            fields=[
                ('resume_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_pdf', models.BinaryField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Resumes', to='Resume.userdetails')),
            ],
            options={
                'db_table': 'user_resumes',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('manager', 'Manager'), ('user', 'User')], default='user', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
